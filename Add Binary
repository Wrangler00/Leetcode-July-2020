Given two binary strings, return their sum (also a binary string).

The input strings are both non-empty and contains only characters 1 or 0.

Example 1:

Input: a = "11", b = "1"
Output: "100"
Example 2:

Input: a = "1010", b = "1011"
Output: "10101"
 

Constraints:

Each string consists only of '0' or '1' characters.
1 <= a.length, b.length <= 10^4
Each string is either "0" or doesn't contain any leading zero.

//cpp solution O(n+m)  //n and m respective lengths

class Solution {
public:
    string addBinary(string a, string b) {
        int s1 = a.length()-1, s2 = b.length()-1;
        int carry=0;
        string ans="";
        while(s1>=0 || s2>=0 || carry){
            int c1 = s1>=0?a[s1]-'0':0;
            int c2 = s2>=0?b[s2]-'0':0;
            int s = c1+c2+carry;
            
            //logic
            // switch(s){
            //     case 0:
            //         ans='0'+ans;
            //         carry=0;
            //         break;
            //     case 1:
            //         ans='1'+ans;
            //         carry=0;
            //         break;
            //     case 2:
            //         ans='0'+ans;
            //         carry=1;
            //         break;
            //     case 3:
            //         ans='1'+ans;
            //         carry=1;
            //         break;
            // }
            
            ans=char(s%2+'0')+ans;
            carry = s>1?1:0;
            
            --s1,--s2;
        }
        
        return ans;
    }
};
