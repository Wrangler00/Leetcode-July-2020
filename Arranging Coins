You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.

Given n, find the total number of full staircase rows that can be formed.

n is a non-negative integer and fits within the range of a 32-bit signed integer.

Example 1:

n = 5

The coins can form the following rows:
¤
¤ ¤
¤ ¤

Because the 3rd row is incomplete, we return 2.
Example 2:

n = 8

The coins can form the following rows:
¤
¤ ¤
¤ ¤ ¤
¤ ¤

Because the 4th row is incomplete, we return 3.


//cpp binary search O(logn) my solution

class Solution {
public:
    int arrangeCoins(int n) {
        if(n<=1) return n;
        long l=1,r=floor(sqrt((long)n*2)),mid,ans;
        while(l<=r){
            mid = (l+r)/2;
            if(mid*(mid+1)==(long)n*2)
                return mid;
            if(mid*(mid+1)<(long)n*2){
                l=mid+1;
                ans=mid;
            }else{
                r=mid-1;
            }
        }
        return ans;
    }
};



//cpp solution 2 using maths

class Solution {
public:
    int arrangeCoins(int n) {
        return sqrt((long)2*n+0.25)-0.5;
    }
};
